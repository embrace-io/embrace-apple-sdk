#!/bin/bash

print_usage() {
    echo "Usage: version_bump <version_number> [-c | --cocoapods] [-m | --meta]"
    echo ""
    echo "Arguments:"
    echo "  <version_number>        The version number to set in the different places where it's needed (EmbraceMeta.swift / Podspec)"
    echo "  -c | --cocoapods        Optional. Only bump version in CocoaPods podspec files"
    echo "  -m | --meta             Optional. Only recreate the EmbraceMeta.swift file"
}

validate_semver() {
    local version="$1"
    local semver_regex="^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$"

    version=$1
    if [ -z "$version" ]; then
        echo "Error: version number not specified" >&2

        print_usage
        exit 1
    fi

    # if version does not match regex, exit with an error
    if [[ ! "$version" =~ $semver_regex ]]; then
        echo "Invalid semantic version" >&2
        exit 2
    fi
}

create_meta_file() {
    local meta_file_path="Sources/EmbraceCommonInternal/EmbraceMeta.swift"
    # Find the root of the repo
    local root_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )/.."

    # Find full path of file
    local version_file="$root_dir/$meta_file_path"

    # Add a Heredoc string for the template of a swift source file and store this string into a variable
    local file_source=$(cat <<-EOM
//
//  Copyright Â© 2024 Embrace Mobile, Inc. All rights reserved.
//

// This file is automatically generated by the '$(basename "$0")' script
// Do not edit this file manually

public class EmbraceMeta {
    public static let sdkVersion = "$VERSION_NUMBER"
}
EOM
    )

    # Write the source to file
    echo "$file_source" > "$version_file"

    # Check if VERSION_FILE can be compiled in swift
    # If the swift file cannot be compiled, then exit with an error
    swiftc "$version_file" -o /dev/null
    if [ $? -ne 0 ]; then
        echo "Error: $version_file cannot be compiled"
        exit 1
    fi
}

bump_cocoapods_version() {
    sed -n "s/__REPLACE_VERSION__/$VERSION_NUMBER/;w EmbraceIO.podspec" $DIRECTORY/templates/EmbraceIO.podspec.tpl
}

VERSION_NUMBER="$1"
DIRECTORY=$(dirname "$0")
COCOAPODS_ONLY=false
META_ONLY=false

# Parse arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -c|--cocoapods) COCOAPODS_ONLY=true ;;
        -m|--meta) META_ONLY=true ;;
        -h|--help) print_usage; exit 0 ;;
        *) VERSION_NUMBER="$1" ;;
    esac
    shift
done

# Validate version number is provided
if [ -z "$VERSION_NUMBER" ]; then
    echo "Error: version number not specified" >&2
    print_usage
    exit 1
fi

# Validate semantic version of version number, exit if not valid
validate_semver "$VERSION_NUMBER"

# if --cocoapods flag was present, just bump version of cocoapods
# if --meta flag was present, just recreate the meta file
# if no flag was provided, proceed doing all the changes.
if [ "$COCOAPODS_ONLY" = true ]; then
    bump_cocoapods_version
elif [ "$META_ONLY" = true ]; then
    create_meta_file
else
    create_meta_file
    bump_cocoapods_version
fi
