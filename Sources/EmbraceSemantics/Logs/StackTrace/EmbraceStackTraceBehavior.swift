//
//  Copyright Â© 2025 Embrace Mobile, Inc. All rights reserved.
//

import Foundation

/// Class used to add attachments when creating `EmbraceLogs`.
@objc
public class EmbraceStackTraceBehavior: NSObject {

    /// Behavior used to not include a stack trace. Same as passing nil as a behavior.
    @objc public class func notIncluded() -> EmbraceStackTraceBehavior {
        return .init(mode: .notIncluded)
    }

    /// Behavior used to include the the stack trace generated by `Thread.callStackSymbols`.
    @objc public class func defaultStackTrace() -> EmbraceStackTraceBehavior {
        return .init(mode: .defaultStackTrace)
    }

    /// Behavior used to include a custom `EmbraceStackTrace`.
    /// - Parameter stackTrace: The custom stack trace to use.
    @objc public class func customStackTrace(_ stackTrace: EmbraceStackTrace) -> EmbraceStackTraceBehavior {
        return .init(mode: .customStackTrace, customStackTrace: stackTrace)
    }

    let mode: StackTraceBehaviorMode
    let customStackTrace: EmbraceStackTrace?

    public var stackTraceFrames: [String]? {
        switch mode {
        case .notIncluded: return nil
        case .defaultStackTrace: return Thread.callStackSymbols
        case .customStackTrace: return customStackTrace?.frames
        }
    }

    init(mode: StackTraceBehaviorMode, customStackTrace: EmbraceStackTrace? = nil) {
        self.mode = mode
        self.customStackTrace = customStackTrace
    }
}

enum StackTraceBehaviorMode {
    case notIncluded, defaultStackTrace, customStackTrace
}
